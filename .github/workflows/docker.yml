name: GitHub Actions Demo
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
    build:
        # ...
        runs-on: ubuntu-latest
        steps:

         - name: Check out the repo
           uses: actions/checkout@v2

         - name: Get short SHA
           run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

         - name: Build
           uses: docker/build-push-action@v2
           with:
             tags: romaintestu/my-tweet-app-lacework:${{ env.GHA_SHA }},romaintestu/my-tweet-app-lacework:latest
             load: true

         - name: lw-scanner
           uses: timarenz/lw-scanner-action@v0.3.0
           env:
             LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
             LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
             LW_SCANNER_SAVE_RESULTS: true
             LW_SCANNER_SCAN_LIBRARY_PACKAGES: true
             LW_SCANNER_DISABLE_UPDATES: true
             STEPS_CONTEXT: ${{ toJSON(steps) }}
             run: echo Step Context "$STEPS_CONTEXT"
           with:
             image_name: romaintestu/my-tweet-app-lacework
             image_tag: ${{ env.GHA_SHA }}
             fail_only_if_vulnerabilities_fixable: false
             fail_if_critical_vulnerabilities_found: true
             fail_if_high_vulnerabilities_found: false
             fail_if_medium_vulnerabilities_found: false
             fail_if_low_vulnerabilities_found: false
             fail_if_info_vulnerabilities_found: false
             save_html_report: true
             html_report_file_name: myreport.html
            
         - name: Context
           if: ${{ failure() }} 
           env:
            GITHUB_CONTEXT: ${{ toJSON(github) }}
           run: echo Context "$GITHUB_CONTEXT"
           
         - name: Login
           if: ${{ failure() }}   
           uses: atlassian/gajira-login@master
           env:
            JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
            JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
            JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
        
         - name: Create
           if: ${{failure()}}  
           id: create
           uses: atlassian/gajira-create@master
           with:
              project: SP
              issuetype: Task
              summary: |
                Docker Image Build : romaintestu/my-tweet-app-lacework
              description: |
                TEST ROMAIN
                ${{join(steps.lw-scanner.outputs.*, '\n')}}
                OUT = ${{steps.lw-scanner.out}}
              fields: ''
           
         - name: Log
           run: 
              echo "Scanner executed ${{ steps.lw-scanner.outputs.* }}"
              echo "Scanner executed NAME ${{ steps.lw-scanner.outputs.name }}"          
          
  


         - name: Log
           run: echo "Issue ${{ steps.create.outputs.issue }} was created"



         - name: Login to DockerHub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: tag and push
           uses: docker/build-push-action@v2
           with:
             push: true
             tags: romaintestu/my-tweet-app-lacework:${{ env.GHA_SHA }},romaintestu/my-tweet-app-lacework:latest,romaintestu/my-tweet-app-lacework:production
